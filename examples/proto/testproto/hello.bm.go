// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: hello.proto

package testproto

import (
	"context"

	gin "github.com/zdao-pro/sky_blue/pkg/net/http/gin"
	"github.com/zdao-pro/sky_blue/pkg/net/http/gin/binding"
)

// to suppressed 'imported but not used warning'
var _ *gin.Context
var _ context.Context
var _ binding.StructValidator

var PathGreeterSayHello = "/testproto.Greeter/SayHello"

// GreeterGinServer is the server API for Greeter service.
// The greeting service definition.
type GreeterGinServer interface {
	// Sends a greeting
	SayHello(ctx context.Context, req *HelloRequest) (resp *HelloReply, err error)
}

var GreeterSvc GreeterGinServer

func greeterSayHello(c *gin.Context) {
	p := new(HelloRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		c.Exit(101, err)
		return
	}
	resp, err := GreeterSvc.SayHello(c, p)
	if err != nil {
		c.Exit(101, err)
		return
	}
	c.Exit(200, resp)
}

// RegisterGreeterGinServer Register the gin server route
func RegisterGreeterGinServer(e *gin.Engine, server GreeterGinServer) {
	GreeterSvc = server
	e.GET("/testproto.Greeter/SayHello", greeterSayHello)
}
